@using WebApplication1.Models;
@{

}
@model List<People>
<h2>QueryAll</h2>
<style>
    table, th, td {
        border: 1px solid black;
    }
</style>
<div id="app">
    <div>
        <input type="text" v-model="searchItem.name" />
        <input type="text" v-model="searchItem.phone_number" />
        <button type="button" class="btn btn-primary" @@click="searchData()">查詢</button>
    </div>
    <hr />
    <div>
        <input type="text" v-model="addItem.name" />
        <input type="text" v-model="addItem.phone_number" />
        <button type="button" class="btn btn-primary" @@click="addData()">新增</button>
    </div>
    <hr />
    <div>
        <input type="text" v-model="delItem.id" />
        <button type="button" class="btn btn-primary" @@click="delData()">刪除</button>
    </div>

    <hr />
    <div>
        <input type="number" v-model="editItem.id" />
        <input type="text" v-model="editItem.name" />
        <input type="text" v-model="editItem.phone_number" />
        <button type="button" class="btn btn-primary" @@click="editData()">修改</button>
    </div>


    <p>{{ msg.name }}</p>
    <table>
        <tr>
            <th>id</th>
            <th>Name</th>
            <th>Phone</th>
        </tr>
        <tr v-for="item in msg" :key="item.price">
            <td>{{ item.id }}</td>
            <td>{{ item.name }}</td>
            <td>{{ item.phone_number }}</td>
            <td>
                <button type="button" class="btn btn-primary" @@click="editData2(item)">修改</button>
                <button type="button" class="btn btn-primary" @@click="delData(item.id)">刪除</button>
            </td>
        </tr>
    </table>
</div>


@*<div>
        <form action="/">
            <label for="fname">Name:</label><br>
            <input type="text" id="name" name="name" value="name"><br>
            <label for="lname">Phone Number:</label><br>
            <input type="text" id="ph" name="phone_number" value="09xxx"><br><br>
            <input type="submit" value="Submit">
        </form>
    </div>*@


<ul>
    @foreach (People item in Model)
    {
        <li>@item.name</li>
    }
</ul>

<div id="app2">
    <table>
        <tr>
            <th>id</th>
            <th>Name</th>
            <th>Phone</th>
        </tr>

        @foreach (People item in Model)
        {
            <tr>
                <td>@item.id</td>
                <td>@item.name</td>
                <td>@item.phone_number</td>
            </tr>
        }

    </table>
</div>

<h1>Vuetify</h1>
@*<div id="app">
    <v-app id="inspire">
        <v-simple-table>
            <template v-slot:default>
                <thead>
                    <tr>
                        <th class="text-left">
                            ID
                        </th>
                        <th class="text-left">
                            Name
                        </th>
                        <th class="text-left">
                            Phone Number
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in msg"
                        :key="item.name">
                        <td>{{ item.id }}</td>
                        <td>{{ item.name }}</td>
                        <td>{{ item.phone_number }}</td>
                    </tr>
                </tbody>
            </template>
        </v-simple-table>
    </v-app>
</div>*@

<div id="app3">
    <v-app id="inspire">
        <v-simple-table>
            <template v-slot:default>
                <thead>
                    <tr>
                        <th class="text-left">
                            Name
                        </th>
                        <th class="text-left">
                            Calories
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in desserts"
                        :key="item.name">
                        <td>{{ item.name }}</td>
                        <td>{{ item.calories }}</td>
                    </tr>
                </tbody>
            </template>
        </v-simple-table>
    </v-app>
</div>


<script>
    function show() {
        console.log("click");

    }
    var app = new Vue({
            el: '#app',
        data: {
            searchItem: {},
            addItem: {},
            editItem: {},
            delItem: {},
                msg: []
        },
        computed: {
            headers() {
                return [
                    {
                        text: 'ID',
                        align: 'start',
                        sortable: false,
                        value: 'id',
                    },
                    {
                        text: 'Name',
                        value: 'name',
                    },
                    { text: 'Phone Number', value: 'phone_number' },

                ]
            },
        },


            methods: {
                searchData() {
                    const _url = '@Url.Action("QueryAll", "People")';
                    const _data = this.searchItem;
                    console.log("serchData");
                    axios.post(_url, _data).then((res) => {
                        console.table(_url)
                        let data = res.data;
                        this.msg = data;
                        //console.log(this.list)
                    }).catch((err) => {
                        console.error(err)
                    });
                },

                 addData() {
                    const _url = '@Url.Action("AddPeople", "People")';
                    const _data = this.addItem;

                    axios.post(_url, _data).then((res) => {
                        let data = res.data;
                        this.searchData();
                        //this.searchData();
                        //this.dialog.edit_view = false;
                        console.log(data)
                    }).catch((err) => {
                        console.error(err)
                    });
                },

                 delData(id) {
                     const _url = '@Url.Action("DeletePeople", "People")';
                     const _data = {
                         id: id
                     };

                    axios.post(_url, _data).then((res)=> {
                        let data = res.data;
                        this.searchData();
                        console.log(data)
                    }).catch((err) => {
                    console.error(err)
                    });
                },

                editData() {
                    const _url = '@Url.Action("EditPeople", "People")';
                    const _data = this.editItem;
                    axios.post(_url, _data).then((res) => {
                        let data = res.data;
                        this.searchData();
                        console.log(data)
                    }).catch((err) => {
                        console.error(err)
                    });
                },

                editData2(item) {
                    this.editItem = Object.assign({}, item);
                }

            }
    })

    new Vue({
        el: '#app3',
        vuetify: new Vuetify(),
        data() {
            return {
                desserts: [
                    {
                        name: 'Frozen Yogurt',
                        calories: 159,
                    },
                    {
                        name: 'Ice cream sandwich',
                        calories: 237,
                    },
                    {
                        name: 'Eclair',
                        calories: 262,
                    },
                    {
                        name: 'Cupcake',
                        calories: 305,
                    },
                    {
                        name: 'Gingerbread',
                        calories: 356,
                    },
                    {
                        name: 'Jelly bean',
                        calories: 375,
                    },
                    {
                        name: 'Lollipop',
                        calories: 392,
                    },
                    {
                        name: 'Honeycomb',
                        calories: 408,
                    },
                    {
                        name: 'Donut',
                        calories: 452,
                    },
                    {
                        name: 'KitKat',
                        calories: 518,
                    },
                ],
            }
        },
    })
</script>
